// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/quiz-suites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all quiz suites for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz-suites"
                ],
                "summary": "Get all quiz suites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.QuizSuite"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new quiz suite with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz-suites"
                ],
                "summary": "Create a new quiz suite",
                "parameters": [
                    {
                        "description": "Quiz Suite object",
                        "name": "quiz_suite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuizSuite"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.QuizSuite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quiz-suites/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific quiz suite by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz-suites"
                ],
                "summary": "Get a quiz suite by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quiz Suite ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuizSuite"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing quiz suite with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz-suites"
                ],
                "summary": "Update a quiz suite",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quiz Suite ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Quiz Suite object",
                        "name": "quiz_suite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuizSuite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QuizSuite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing quiz suite by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quiz-suites"
                ],
                "summary": "Delete a quiz suite",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quiz Suite ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Quiz": {
            "type": "object",
            "properties": {
                "correct_answer": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "quiz_suites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QuizSuite"
                    }
                },
                "quiz_type": {
                    "$ref": "#/definitions/models.QuizType"
                },
                "selections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QuizSelection"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.QuizSelection": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_correct": {
                    "type": "boolean"
                },
                "quiz": {
                    "$ref": "#/definitions/models.Quiz"
                },
                "quiz_id": {
                    "type": "integer"
                },
                "selection_text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.QuizSuite": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quizzes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Quiz"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.QuizType": {
            "type": "string",
            "enum": [
                "single_choice",
                "multi_choice",
                "true_false"
            ],
            "x-enum-varnames": [
                "QuizTypeSingleChoice",
                "QuizTypeMultiChoice",
                "QuizTypeTrueFalse"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quiz_suites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QuizSuite"
                    }
                },
                "quizzes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Quiz"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Quizlet API",
	Description:      "API for managing quizzes, quiz suites, and users",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
